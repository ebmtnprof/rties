params %>%#
  select("inert1", "coord1", "coord0", "inert0") %>%#
  estimate_profiles(n_profiles=1:3, models=c(1,2)) ->#
  results
ls()
paramData <- inertCoord$paramData # includes sysVar and dist0, with 1 obs per person
params <- paramData[paramData$dist0 == 1, ]
params %>%#
  select("inert1", "coord1", "coord0", "inert0") %>%#
  estimate_profiles(n_profiles=1:3, models=c(1,2)) ->#
  results
compare_solutions(m1)
compare_solutions(results)
m1 <- estimate_profiles(params, n_profiles=2)
compare_solutions(params, inert1, coord1, coord0, inert0)
plot_profiles(m1)
m1 <- estimate_profiles(params, inert1, coord1, coord0, inert0, n_profiles=2, variances="varying", covariances="varying")
plot_profiles(m1)
ls()
params <- paramData[paramData$dist0 == 1, ]
tidyLPA::compare_solutions(params, inert1, coord1, coord0, inert0)
m1 <- estimate_profiles(params, inert1, coord1, coord0, inert0, n_profiles=2, variances="varying", covariances="varying")
ls()
test <- estimate_profiles(m1, return_orig_df=T)
test <- return_orig_df(m1)
library(rties)
data1 <- rties_ExampleData_2
data1 <- subset(data1, select=c(couple, person, dial, convQual, female, time))
dyads <- c(19)#
data2 <- removeDyads(data1, dyads, data1$couple)
data2 <- dataPrep(data1, "person","couple", "dial","convQual","female","time", time_lag=3)
inertCoord <- indivInertCoord(data2, "inertCoord")
paramData <- inertCoord$paramData # includes sysVar and dist0, with 1 obs per person
devtools::install_github("ebmtnprof/rties")
library(rties)
data1 <- rties_ExampleData_2#
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)
ic <- indivInertCoord(data2, "inertCoord")
data2 <- dataPrep(data1, "person","couple", "dial","convQual","female","time", time_lag=3)
ic <- indivInertCoord(data2, "inertCoord")
names(ic)
library(tidyLPA)
compare_solutions(ic$params, inert1, coord1, coord0, inert0)
lpaStep1 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles=3, variances="varying", covariances="varying")
plot_profiles(lpaPlots)
plot_profiles(lpaStep1)
lpaStep1 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles=2, variances="varying", covariances="varying")
plot_profiles(lpaStep1)
library(rties)
data1 <- rties_ExampleData_2
dyads <- c(19)#
data2 <- removeDyads(data1, dyads, data1$couple)#
#
data3 <- dataPrep(data2, "person","couple", "dial","convQual","female","time", time_lag=3)
data1 <- rties_ExampleData_2#
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)
data2 <- dataPrep(data1, "person","couple", "dial","convQual","female","time", time_lag=3)
ic <- indivInertCoord(data2, "inertCoord")
library(tidyLPA)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", return_orig_df=T)
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", to_return="mclust")
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
profilePlots <- inertCoordPredTraj(origData=data2, lpaData=lpaVars$profileData, lpaParams=lpaVars$profileParams, n_profiles=2, time_length=50, dist0name="men", dist1name="women", obsName="Dial")
profilePlots <- inertCoordPredTraj(origData=data2, lpaData=lpaVars$profileData, lpaParams=lpaVars$profileParams, n_profiles=2, dist0name="men", dist1name="women", obsName="Dial")
profilePlots <- inertCoordPredTraj(origData=data2, lpaData=lpaVars$profileData, lpaParams=lpaVars$profileParams, n_profiles=2, time_length=100, dist0name="men", dist1name="women", obsName="Dial")
library(rties)
data1 <- rties_ExampleData_2
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)
data2 <- dataPrep(data1, "person","couple", "dial","convQual","female","time", time_lag=3)
ic <- indivInertCoord(data2, "inertCoord")
library(tidyLPA)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", to_return="mclust")#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")#
#
profilePlots <- inertCoordPredTraj(origData=data2, lpaData=lpaVars$profileData, lpaParams=lpaVars$profileParams, n_profiles=2, time_length=50, dist0name="men", dist1name="women", obsName="Dial")
library(rties)
data1 <- rties_ExampleData_2#
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)
data2 <- dataPrep(data1, "person","couple", "dial","convQual","female","time", time_lag=3)
ic <- indivInertCoord(data2, "inertCoord")
library(tidyLPA)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", to_return="mclust")#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "convQual", printPlots=F)
summary(sysOut$models$profile)
summary(sysIn$models$sysVarMain)
sysIn <- sysVarIn(lpaVars$profileData, "indiv", n_profiles=2, dist0name="women", dist1name="men", sysVarName="ER")
summary(sysIn$models$sysVarMain)
library(rties)
data1 <- rties_ExampleData_2
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)#
#
data2 <- dataPrep(data1, "person","couple", "dial","convQual","female","time")
summary(derivs$fitTable[ ,4])
taus <- c(7,8,9)#
embeds <- c(5,7,9,10)#
delta <- 1#
#
derivs <- estDerivs(data3, taus, embeds, delta)#
#
head(derivs$fitTable)
derivs <- estDerivs(data2, taus, embeds, delta)#
#
head(derivs$fitTable)#
summary(derivs$fitTable[ ,4])#
summary(derivs$fitTable[ ,5])
(142*4)/60 # 9.3 minutes
taus <- c(5,6,7)#
embeds <- c(3,4,5)#
delta <- 1#
#
derivs <- estDerivs(data2, taus, embeds, delta)
head(derivs$fitTable)
summary(derivs$fitTable[ ,4])
summary(derivs$fitTable[ ,5])
(64*4)/60 # 9.5 minutes
derivs$fitTable
(50*4)/60
(64*4)/60 # mean: 4.3 minutes
(110*4)/60 # max: 4.3 minutes
50*4
library(rties)
data1 <- rties_ExampleData_2
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)#
#
data2 <- dataPrep(data1, "person","couple", "dial","convQual","female","time")
taus <- c(5,6,7)#
embeds <- c(3,4,5)#
delta <- 1#
#
derivs <- estDerivs(data2, taus, embeds, delta)
compare <- indivCloCompare(derivs$data)#
summary(compare$R2uncouple)#
summary(compare$R2couple)#
summary(compare$R2dif)
plots <- indivCloPlots(derivs$data, whichModel="coupled", idConvention=500)
library(rties)
data1 <- rties_ExampleData_2
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)#
#
data2 <- dataPrep(data1, "person","couple", "dial","convQual","female","time")
taus <- c(5,6,7)#
embeds <- c(3,4,5)#
delta <- 1#
#
derivs <- estDerivs(data2, taus, embeds, delta)
clo <- indivClo(derivs$data, whichModel="coupled")
head(clo$params)
head(clo$data)
names(clo)
library(rties)
data1 <- rties_ExampleData_2
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)#
#
data2 <- dataPrep(data1, "person","couple", "dial","convQual","female","time")
taus <- c(5,6,7)#
embeds <- c(3,4,5)#
delta <- 1#
#
derivs <- estDerivs(data2, taus, embeds, delta)
clo <- indivClo(derivs$data, whichModel="coupled")
head(clo$params)
library(tidyLPA)#
#
compare_solutions(clo$params, obs_0:p_d1_1)
lpaStep1 <- estimate_profiles(clo$params, obs_0:p_d1_1, n_profiles=2, variances="equal", covariances="equal")
plot_profiles(lpaStep1)
lpaStep2 <- estimate_profiles(clo$params, obs_0:p_d1_1, n_profiles= 2, variances="equal", covariances="equal", return_orig_df=T)
lpaStep3 <- estimate_profiles(clo$params, obs_0:p_d1_1, n_profiles= 2, variances="equal", covariances="equal", to_return="mclust")
lpaVars <- makeLpaData(derivs$data, lpaStep2, lpaStep3, "clo")
profilePlots <- cloPredTraj(origData=data3, lpaData=lpaVars$profileData, lpaParams=lpaVars$profileParams, n_profiles=2, dist0name="Men", dist1name="Women", obsName="Dial", minMax= c(.1, .9))
profilePlots <- cloPredTraj(origData=data2, lpaData=lpaVars$profileData, lpaParams=lpaVars$profileParams, n_profiles=2, dist0name="Men", dist1name="Women", obsName="Dial", minMax= c(.1, .9))
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="Men", dist1name="Women", sysVarName = "convQual")
summary(sysOut$models$profile)#
summary(sysOut$models$profilePlusDist)#
summary(sysOut$models$profileByDist)
compare_solutions(clo$params, obs_0:p_d1_1)
lpaStep2 <- estimate_profiles(clo$params, obs_0:p_d1_1, n_profiles= 2, variances="varying", covariances="varying", return_orig_df=T)
lpaStep3 <- estimate_profiles(clo$params, obs_0:p_d1_1, n_profiles= 2, variances="varying", covariances="varying", to_return="mclust")
lpaVars <- makeLpaData(derivs$data, lpaStep2, lpaStep3, "clo")
profilePlots <- cloPredTraj(origData=data2, lpaData=lpaVars$profileData, lpaParams=lpaVars$profileParams, n_profiles=2, dist0name="Men", dist1name="Women", obsName="Dial", minMax= c(.1, .9))
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="Men", dist1name="Women", sysVarName = "convQual")
summary(sysOut$models$profile)#
summary(sysOut$models$profilePlusDist)#
summary(sysOut$models$profileByDist)
str(data1)
histAll(data1)
lpaStep1 <- estimate_profiles(clo$params, obs_0:p_d1_1, n_profiles=2, variances="equal", covariances="equal")#
plot_profiles(lpaStep1)
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="Men", dist1name="Women", sysVarName = "convQual")#
summary(sysOut$models$profile)#
summary(sysOut$models$profilePlusDist)#
summary(sysOut$models$profileByDist)
sysIn <- sysVarIn(lpaVars$profileData, "indiv", n_profiles=2, dist0name="Men", dist1name="Women", sysVarName="ConvQual")
summary(sysIn$models$sysVarMain)
summary(sysIn$models$sysVarInteract)
library(rties)
data1 <- rties_ExampleData_2#
str(data1)
dyads <- c(19)#
data2 <- removeDyads(data1, dyads, data1$couple)
data3 <- dataPrep(data2, "person","couple", "dial","avoid","female","time", time_lag=3)
data1 <- rties_ExampleData_2#
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)
data2 <- dataPrep(data1, "person","couple", "dial","avoid","female","time", time_lag=3)
ic <- indivInertCoord(data2, "inertCoord")
library(tidyLPA)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", to_return="mclust")#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
profilePlots <- inertCoordPredTraj(origData=data2, lpaData=lpaVars$profileData, lpaParams=lpaVars$profileParams, n_profiles=2, time_length=50, dist0name="men", dist1name="women", obsName="Dial")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "avoid", printPlots=F)
summary(sysOut$models$profile)#
summary(sysOut$models$profilePlusDist)#
summary(sysOut$models$profileByDist)
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "avoid", printPlots=T)
sysIn <- sysVarIn(lpaVars$profileData, "indiv", n_profiles=2, dist0name="women", dist1name="men", sysVarName="avoid", family="Gamma")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "avoid", printPlots=T, family="Gamma")
summary(sysOut$models$profileByDist)
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "avoid", printPlots=T, family="Gamma")
anova(sysOut$models$profilePlusDist, sysOut$models$profileByDist)
coefs <- coef(sysOut$models$profileByDist)
coefs
names(sysVarOut)
names(summary(sysVarOut))
names(sysVarOut$models$profileByDist)
names(summary(sysVarOut$models$profileByDist))
names(summary(sysOut$models$profileByDist))
names(sysOut$models$profileByDist)
sysOut$models$profileByDist$coefficients
sysOut$models$profileByDist$coefficients$fixed
exp(sysOut$models$profileByDist$coefficients$fixed)
hist(log(data1$avoid))
names(data1)
data1 <- rties_ExampleData_2
dyads <- c(19)#
data1 <- removeDyads(data1, dyads, data1$couple)
data2 <- dataPrep(data1, "person","couple", "dial","dyadEngage","female","time", time_lag=3)
ic <- indivInertCoord(data2, "inertCoord")
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", to_return="mclust")#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
sysOut <- sysVarOut(lpaVars$profileData, "dyadic", dist0name="men", dist1name="women", sysVarName = "engage", printPlots=T)
summary(sysOut$models$profile)
data1 <- rties_ExampleData_2
data2 <- dataPrep(data1, "person","couple", "dial","avoid","female","time")
taus <- c(5,6,7)#
embeds <- c(3,4,5)#
delta <- 1#
#
derivs <- estDerivs(data2, taus, embeds, delta)
clo <- indivClo(derivs$data, whichModel="coupled")
lpaStep2 <- estimate_profiles(clo$params, obs_0:p_d1_1, n_profiles= 2, variances="equal", covariances="equal", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(clo$params, obs_0:p_d1_1, n_profiles= 2, variances="equal", covariances="equal", to_return="mclust")#
#
lpaVars <- makeLpaData(derivs$data, lpaStep2, lpaStep3, "clo")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="Men", dist1name="Women", sysVarName = "avoid", family="Gamma")
summary(sysOut$models$profile)#
summary(sysOut$models$profilePlusDist)#
summary(sysOut$models$profileByDist)
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="Men", dist1name="Women", sysVarName = "avoid")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="Men", dist1name="Women", sysVarName = "avoid", family="Gamma")
summary(sysOut$models$profilePlusDist)
names(sysOut$models$profilePlusDist)
exp(-.09)
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="Men", dist1name="Women", sysVarName = "avoid", family=exponential)
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="Men", dist1name="Women", sysVarName = "avoid")
devtools::install_github("ebmtnprof/rties")
library(rties)
data1 <- rties_ExampleData_2#
str(data1)#
histAll(data1)
setwd("/Users/emily/Documents/Projects/LAF/Data/Edited")#
data1 <- read.csv("dialC2secMods04.csv")
data2 <- subset(data1, select=c(Couple, Person, Dial, time4sec, female, empathy, influence))
data2 <- subset(data1, select=c(Couple, Person, Dial, time, female, empathy, influence))
colnames(data2) <- c("couple","person","dial","time","female","empathy","influence")#
str(data2)
rties_ExampleData_2 <- data2#
#
setwd("/Users/emily/Documents/Projects/R-TIES/rties")#
devtools::use_data(rties_ExampleData_2)
devtools::use_data(rties_ExampleData_2)
data1 <- rties_ExampleData_2
data2 <- dataPrep(data1, "person","couple", "dial","empathy","female","time", time_lag=10)
compare <- indivInertCoordCompare(data2)#
summary(compare$R2inert)#
summary(compare$R2coord)#
summary(compare$R2inertCoord)#
summary(compare$R2dif_IC_I)
ic <- indivInertCoord(data2, "inertCoord")
histAll(ic$data)
histAll(ic$data)
library(tidyLPA)#
#
compare_solutions(ic$params, inert1, coord1, coord0, inert0)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="equal", covariances="equal", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="equal", covariances="equal", to_return="mclust")#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
sysOut <- sysVarOut(lpaVars$profileData, "dyadic", dist0name="men", dist1name="women", sysVarName = "engage", printPlots=T)
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "empathy", printPlots=T)
summary(sysOut$models$profile)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", to_return="mclust")#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "empathy", printPlots=T)
summary(sysOut$models$profile)
compare_solutions(ic$params, inert1, coord1, coord0, inert0)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 3, variances="varying", covariances="varying", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 3, variances="varying", covariances="varying", to_return="mclust")#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "empathy", printPlots=T)
summary(sysOut$models$profile)
coefs <- coef(sysOut$models$profileByDist)
summary(sysOut$models$profileByDist)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", to_return="mclust")#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "empathy", printPlots=T)
lpaStep1 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles=2, variances="varying", covariances="varying")#
plot_profiles(lpaStep1)
lpaStep1 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles=2, variances="equal", covariances="equal")
plot_profiles(lpaStep1)
compare_solutions(ic$params, inert1, coord1, coord0, inert0)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="equal", covariances="zero", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="equal", covariances="zero", to_return="mclust")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "empathy", printPlots=T)
summary(sysOut$models$profile)
lpaStep1 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles=2, variances="equal", covariances="zero")
plot_profiles(lpaStep1)
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="equal", covariances="zero", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="equal", covariances="zero", to_return="mclust")#
#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "empathy", printPlots=T)
summary(sysOut$models$profileByDist)
summary(sysOut$models$profile)
summary(sysOut$models$profilePlusDist)
compare_solutions(ic$params, inert1, coord1, coord0, inert0)
compare_solutions(ic$params, inert1, coord1, coord0, inert0, print_which_stats="all")
lpaStep1 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles=2, variances="equal", covariances="zero", print_which_stats="all")
lpaStep1 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles=2, variances="equal", covariances="equal", print_which_stats="all")
lpaStep1 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles=2, variances="varying", covariances="varying", print_which_stats="all")
lpaStep1 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles=2, variances="varying", covariances="varying")#
plot_profiles(lpaStep1)
15/79
lpaStep2 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", return_orig_df=T)#
#
lpaStep3 <- estimate_profiles(ic$params, inert1, coord1, coord0, inert0, n_profiles= 2, variances="varying", covariances="varying", to_return="mclust")#
#
lpaVars <- makeLpaData(ic$data, lpaStep2, lpaStep3, "inertCoord")
profilePlots <- inertCoordPredTraj(origData=data2, lpaData=lpaVars$profileData, lpaParams=lpaVars$profileParams, n_profiles=2, time_length=50, dist0name="men", dist1name="women", obsName="Dial")
?inertCoordPredTraj
sysOut <- sysVarOut(lpaVars$profileData, "indiv", dist0name="men", dist1name="women", sysVarName = "empathy", printPlots=T)#
summary(sysOut$models$profile)#
summary(sysOut$models$profilePlusDist)#
summary(sysOut$models$profileByDist)
anova(sysOut$models$profile,sysOut$models$profilePlusDist)
sysIn <- sysVarIn(lpaVars$profileData, "indiv", n_profiles=2, dist0name="women", dist1name="men", sysVarName="empathy")
sysVarIn <- function(basedata, sysVarType, n_profiles, dist0name=NULL, dist1name=NULL, sysVarName=NULL, printPlots=T){#
#
  if(is.null(dist0name)){dist0name <- "dist0"}#
  if(is.null(dist1name)){dist1name <- "dist1"}#
  if(is.null(sysVarName)){sysVarName <- "sysVar"}#
  if(sysVarType != "indiv" & sysVarType != "dyadic") {#
	stop("the sysVarType must be either indiv or dyadic")#
  }#
#
  basedata <- basedata[complete.cases(basedata), ] #
  basedata$dist <- factor(basedata$dist0, labels=c(dist1name, dist0name))#
  if(sysVarType == "dyadic"){#
    basedata <- basedata[!duplicated(basedata$dyad), ]#
    if(n_profiles == 2){#
      base <- glm(profileN ~ 1, data=basedata, family="binomial")#
      sysVar <- glm(profileN ~ sysVar, data=basedata, family="binomial")    	#
    } else {#
    	base <- nnet::multinom(profileN ~ 1, data=basedata)#
    	sysVar <- nnet::multinom(profileN ~ sysVar, data=basedata)#
    }	#
	  if(printPlots==T){#
	  	plot(basedata$sysVar, basedata$profile)#
	  }#
  }#
    if(sysVarType == "indiv"){#
    data1 <- subset(basedata, select=c(dyad, sysVar, dist0, profileN))#
    data2 <-  stats::reshape(data1, idvar="dyad", timevar = "dist0", direction= "wide")#
    data3 <- subset(data2, select=-c(profileN.1))   #
    colnames(data3) <- c("dyad", "sysVar0","sysVar1","profileN")#
    basedata <- data3#
    sysVar0name <- paste(sysVarName, dist0name, sep="_")#
	sysVar1name <- paste(sysVarName, dist1name, sep="_")#
	sysVar01name <- paste(sysVar0name, sysVar1name, sep=":")#
    if(n_profiles == 2){#
      base <- glm(profileN ~ 1, data=basedata, family="binomial")#
      sysVarMain <- glm(profileN ~ sysVar0 + sysVar1, data=basedata, family="binomial") #
      names(sysVarMain$coefficients) <- c("Intercept", sysVar0name, sysVar1name)#
      sysVarInteract <- glm(profileN ~ sysVar0 * sysVar1, data=basedata, family="binomial") #
      names(sysVarInteract$coefficients) <- c("Intercept", sysVar0name, sysVar1name, sysVar01name)#
     if(printPlots==T){#
	  	plot(basedata$sysVar0, basedata$profile, xlab=sysVar0name, ylab="Profile")#
	  	plot(basedata$sysVar1, basedata$profile, xlab=sysVar1name, ylab="Profile")#
	  	print(jtools::interact_plot(sysVarInteract, pred=sysVar0, modx=sysVar1, y.label="Prob Profile = 2", x.label=sysVar0name, legend.main=sysVar1name, color.class="Greys", interval=T))#
	  }#
    } else {#
    	base <- nnet::multinom(profileN ~ 1, data=basedata)#
    	sysVarMain <- nnet::multinom(profileN ~ sysVar0 + sysVar1, data=basedata)#
    	names(sysVarMain$coefnames) <- c("Intercept", sysVar0name, sysVar1name)#
    	sysVarInteract <- nnet::multinom(profileN ~ sysVar0 * sysVar1, data=basedata)#
    	names(sysVarInteract$coefnames) <- c("Intercept", sysVar0name, sysVar1name, sysVar01name)#
     if(printPlots==T){#
	  	plot(basedata$sysVar0, basedata$profile, xlab=sysVar0name, ylab="Profile")#
	  	plot(basedata$sysVar1, basedata$profile, xlab=sysVar1name, ylab="Profile")#
	  }#
    }	#
  }#
  if(sysVarType == "dyadic"){#
	models <- list(base=base, sysVar=sysVar)#
  }#
  if(sysVarType == "indiv"){#
	models <- list(base=base, sysVarMain=sysVarMain, sysVarInteract=sysVarInteract)#
  }#
	output <- list(models=models)#
}
sysIn <- sysVarIn(lpaVars$profileData, "indiv", n_profiles=2, dist0name="women", dist1name="men", sysVarName="empathy")
ls()
head(lpaVars$profileData)
str(lpaVars$profileData)
basedata <- lpaVars$profileData#
sysVarType <- "indiv"#
n_profiles <- 2#
dist0name=NULL#
dist1name=NULL#
sysVarName=NULL#
printPlots=T
if(is.null(dist0name)){dist0name <- "dist0"}#
  if(is.null(dist1name)){dist1name <- "dist1"}#
  if(is.null(sysVarName)){sysVarName <- "sysVar"}#
  if(sysVarType != "indiv" & sysVarType != "dyadic") {#
	stop("the sysVarType must be either indiv or dyadic")#
  }
basedata <- basedata[complete.cases(basedata), ] #
  basedata$dist <- factor(basedata$dist0, labels=c(dist1name, dist0name))
